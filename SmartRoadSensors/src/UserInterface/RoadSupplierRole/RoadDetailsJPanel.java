/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.RoadSupplierRole;

import Business.Enterprise.Enterprise;
import Business.Road.Road;
import Business.Supplier.Products.Product;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Leandra
 */
public class RoadDetailsJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    Road r;
    UserAccount ua;
    Enterprise e;
    WorkRequest wr;

    /**
     * Creates new form RoadDetailsJPanel
     */
    public RoadDetailsJPanel(JPanel userProcessContainer, Road r, UserAccount ua, Enterprise e, WorkRequest wr) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.r = r;
        this.ua = ua;
        this.e = e;
        this.wr = wr;
        populateRoadSupplierCatalogTable();
    }

    public void populateRoadSupplierCatalogTable() {
        DefaultTableModel dtm = (DefaultTableModel) supplierCatalogjTable.getModel();
        dtm.setRowCount(0);

        for (Product p : r.getRoadSupplier().getProductCatalog().getProductcatalog()) {
            Object row[] = new Object[3];
            row[0] = r.getRoadid();
            row[1] = p;
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        backjButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        materialsNeededjTable = new javax.swing.JTable();
        addProductMaterialsjButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        supplierCatalogjTable = new javax.swing.JTable();
        requestSupplierjButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Segoe Print", 1, 36)); // NOI18N
        jLabel1.setText("Process Message Details");

        backjButton.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        backjButton.setText("Back");
        backjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        jLabel2.setText("Materials Needed");

        materialsNeededjTable.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        materialsNeededjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Road ID", "Road Name", "Product Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(materialsNeededjTable);

        addProductMaterialsjButton.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        addProductMaterialsjButton.setText("Add");
        addProductMaterialsjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProductMaterialsjButtonActionPerformed(evt);
            }
        });

        supplierCatalogjTable.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        supplierCatalogjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Road Id", "Product Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(supplierCatalogjTable);

        requestSupplierjButton.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        requestSupplierjButton.setText("Request Supplier");
        requestSupplierjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestSupplierjButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        jLabel3.setText("Supplier Catalog");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(289, 289, 289)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(backjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(requestSupplierjButton))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(addProductMaterialsjButton)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2)
                                    .addComponent(jScrollPane1)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 730, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(296, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jLabel1)
                .addGap(59, 59, 59)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57))
                    .addComponent(addProductMaterialsjButton))
                .addGap(25, 25, 25)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(requestSupplierjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(268, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addProductMaterialsjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductMaterialsjButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = supplierCatalogjTable.getSelectedRow();
        Product selectedproduct;
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Select a product!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            selectedproduct = (Product) supplierCatalogjTable.getValueAt(selectedRow, 1);
        }
        boolean alreadyPresent = false;
        for (Product p : r.getRoadSupplier().getProductCatalog().getProductcatalog()) {
            if (p.getProdName().equalsIgnoreCase(selectedproduct.getProdName())) {
                alreadyPresent = true;
                refreshMaterialsNeededTable();
                populateRoadSupplierCatalogTable();
                break;
            }
        }
        if (!alreadyPresent) {
            Product newProduct = new Product();
            newProduct.setProdName(newProduct.getProdName());
            r.getRoadSupplier().getProductCatalog().addProduct(newProduct);
            refreshMaterialsNeededTable();
            populateRoadSupplierCatalogTable();

        } else {
            JOptionPane.showMessageDialog(this, "Product added", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_addProductMaterialsjButtonActionPerformed

    private void requestSupplierjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestSupplierjButtonActionPerformed
        // TODO add your handling code here:
        Road road;
        int selectedRow = materialsNeededjTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Select a row", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            road = (Road) materialsNeededjTable.getValueAt(selectedRow, 1);
        }
        ProcessRequestRoadJPanel processRoadRequestJPanel = new ProcessRequestRoadJPanel(userProcessContainer, e, ua, road, wr);
        userProcessContainer.add("processRoadRequestJPanel", processRoadRequestJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_requestSupplierjButtonActionPerformed

    private void backjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        RoadSupplierWorkAreaJPanel rswajp = (RoadSupplierWorkAreaJPanel) component;
        rswajp.populateRoadMaintanenceTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButtonActionPerformed

    private void refreshMaterialsNeededTable() {
        DefaultTableModel dtm = (DefaultTableModel) materialsNeededjTable.getModel();
        dtm.setRowCount(0);

        for (Product p : r.getRoadSupplier().getProductCatalog().getProductcatalog()) {
            Object row[] = new Object[4];
            row[0] = r.getRoadid();
            row[1] = r;
            row[2] = p;
            dtm.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addProductMaterialsjButton;
    private javax.swing.JButton backjButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable materialsNeededjTable;
    private javax.swing.JButton requestSupplierjButton;
    private javax.swing.JTable supplierCatalogjTable;
    // End of variables declaration//GEN-END:variables
}
