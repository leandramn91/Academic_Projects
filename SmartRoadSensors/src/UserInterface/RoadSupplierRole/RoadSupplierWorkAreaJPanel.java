/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.RoadSupplierRole;

import Business.Enterprise.Enterprise;
import Business.Main.EcoSystem;
import Business.Organization.Organization;
import Business.Road.Road;
import Business.Supplier.Supplier;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.MaintainenceWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Leandra
 */
public class RoadSupplierWorkAreaJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    UserAccount ua;
    Enterprise e;
    EcoSystem system;
    Supplier s;

    /**
     * Creates new form RoadSupplierWorkAreaJPanel
     */
    public RoadSupplierWorkAreaJPanel(JPanel userProcessContainer, UserAccount ua, Enterprise e, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ua = ua;
        this.e = e;
        this.system = system;
        this.s = findSupplier();
        populateRoadMaintanenceTable();
    }

    private Supplier findSupplier() {
        for (Supplier s : e.getSupplierDirectory().getSupplierlist()) {
            if (s.getSupplyName().equalsIgnoreCase(ua.getEmployee().getName())) {
                return s;
            }
        }
        return null;
    }

    public void populateRoadMaintanenceTable() {

        DefaultTableModel model = (DefaultTableModel) roadSupplierjTable.getModel();
        model.setRowCount(0);
        for (WorkRequest request : ua.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[4];
            row[0] = request.getRoad();
            row[1] = request;
            row[2] = request.getStatus();
            String result = ((MaintainenceWorkRequest) request).getTestResult();
            row[3] = result == null ? "Waiting" : result;
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pocessMessagejButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        roadSupplierCatalogjButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        roadSupplierjTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        pocessMessagejButton.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        pocessMessagejButton.setText("Process Message");
        pocessMessagejButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pocessMessagejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pocessMessagejButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe Print", 1, 36)); // NOI18N
        jLabel1.setText("Road Supplier Work Area ");

        roadSupplierCatalogjButton.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        roadSupplierCatalogjButton.setText("Road Supplier Catalog");
        roadSupplierCatalogjButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        roadSupplierCatalogjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roadSupplierCatalogjButtonActionPerformed(evt);
            }
        });

        roadSupplierjTable.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        roadSupplierjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Road Name", "Problem", "Status", "Result"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(roadSupplierjTable);

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Leandra\\Documents\\GitHub\\menezes_leandra_001621189\\menezes_leandra_001621189\\Project\\SmartRoadSensors\\images\\19540-200.png")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(230, 230, 230)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(roadSupplierCatalogjButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pocessMessagejButton))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 694, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 56, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(72, 72, 72)
                        .addComponent(jLabel2)
                        .addGap(409, 409, 409))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(85, 85, 85)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pocessMessagejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roadSupplierCatalogjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void roadSupplierCatalogjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roadSupplierCatalogjButtonActionPerformed
        // TODO add your handling code here:
        RoadSupplierCatalogJPanel roadSupplierCatalogJPanel = new RoadSupplierCatalogJPanel(userProcessContainer, s);
        userProcessContainer.add("roadSupplierCatalogJPanel", roadSupplierCatalogJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_roadSupplierCatalogjButtonActionPerformed

    private void pocessMessagejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pocessMessagejButtonActionPerformed
        // TODO add your handling code here:
        Road road;
        WorkRequest workRequest;
        String status;
        int selectedRow = roadSupplierjTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Select a row", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        road = (Road) roadSupplierjTable.getValueAt(selectedRow, 0);
        workRequest = (WorkRequest) roadSupplierjTable.getValueAt(selectedRow, 1);
        status = roadSupplierjTable.getValueAt(selectedRow, 3).toString();
        if (status.equalsIgnoreCase("Processed")) {
            JOptionPane.showMessageDialog(this, "It is already processed", "Warning", JOptionPane.WARNING_MESSAGE);

        } else {

            RoadDetailsJPanel roadDetailsJPanel = new RoadDetailsJPanel(userProcessContainer, road, ua, e, workRequest);
            userProcessContainer.add("roadDetailsJPanel", roadDetailsJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_pocessMessagejButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton pocessMessagejButton;
    private javax.swing.JButton roadSupplierCatalogjButton;
    private javax.swing.JTable roadSupplierjTable;
    // End of variables declaration//GEN-END:variables
}
