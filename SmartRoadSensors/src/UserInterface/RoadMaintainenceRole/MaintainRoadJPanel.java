/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.RoadMaintainenceRole;

import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Road.Road;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.MaintainenceWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Leandra
 */
public class MaintainRoadJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    Organization o;
    UserAccount ua;
    Enterprise e;
    /**
     * Creates new form MaintainRoadJPanel
     */
    public MaintainRoadJPanel(JPanel userProcessContainer, Organization o,UserAccount ua,Enterprise e) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.o = o;
        this.ua = ua;
        this.e = e;
        
        populateRoadMaintanenceTable();
    }
    
    public void populateRoadMaintanenceTable(){
        DefaultTableModel model = (DefaultTableModel) roadMaintainencejTable.getModel();
        model.setRowCount(0);
        for (WorkRequest request : ua.getWorkQueue().getWorkRequestList()){
            //if (request.getReceiver() == ua)
            //{
             Object[] row = new Object[9];
             Road r = request.getRoad();
             row[0] = r.getRoadid();
             row[1] = r;
             row[2] = request.getSensorData().getSensorRoadStatus();
             row[3] = request.getSensorData().getSensorWeatherStatus();
             row[4] = request.getSender();
             row[5] = r.getRoadSupplier();
             row[6] = request;
             String result = ((MaintainenceWorkRequest) request).getTestResult();
             row[7] = result == null ? "Waiting" : result;
             model.addRow(row);
            //}
            
        }
        }
    
    
        
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        requestRoadSupplierjButton = new javax.swing.JButton();
        requestWorkerjButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        roadMaintainencejTable = new javax.swing.JTable();
        backjButton = new javax.swing.JButton();

        requestRoadSupplierjButton.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        requestRoadSupplierjButton.setText("Request Road Supplier");
        requestRoadSupplierjButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        requestRoadSupplierjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestRoadSupplierjButtonActionPerformed(evt);
            }
        });

        requestWorkerjButton.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        requestWorkerjButton.setText("Request Worker");
        requestWorkerjButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        requestWorkerjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestWorkerjButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe Print", 1, 36)); // NOI18N
        jLabel1.setText("Road Maintenance Work Queue");

        roadMaintainencejTable.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        roadMaintainencejTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Road ID", "Road Name", "Road Status", "Weather", "Sender", "Road Supplier Name", "Message", "Result"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(roadMaintainencejTable);

        backjButton.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        backjButton.setText("Back");
        backjButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        backjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(jLabel1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(backjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(requestWorkerjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(265, 265, 265)
                            .addComponent(requestRoadSupplierjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1041, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(162, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(jLabel1)
                .addGap(46, 46, 46)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(requestRoadSupplierjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(requestWorkerjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(313, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButtonActionPerformed

    private void requestWorkerjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestWorkerjButtonActionPerformed
        // TODO add your handling code here:
        Road road;
        WorkRequest message;
        String status;
        int selectedRow = roadMaintainencejTable.getSelectedRow();
        
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Select a row", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } 
            road = (Road) roadMaintainencejTable.getValueAt(selectedRow, 1);
            message = (WorkRequest)roadMaintainencejTable.getValueAt(selectedRow, 6);
            status = roadMaintainencejTable.getValueAt(selectedRow, 7).toString();
        if (status.equalsIgnoreCase("Processed")) {
            JOptionPane.showMessageDialog(this, "It is already processed", "Warning", JOptionPane.WARNING_MESSAGE);

        }
         else {
        
        RequestWorkerJPanel requestWorkerJPanel = new RequestWorkerJPanel(userProcessContainer, road, message);
        userProcessContainer.add("requestWorkerJPanel", requestWorkerJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_requestWorkerjButtonActionPerformed

    private void requestRoadSupplierjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestRoadSupplierjButtonActionPerformed
        // TODO add your handling code here:
        String status;
        int selectedRow = roadMaintainencejTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Select a row", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Road road = (Road) roadMaintainencejTable.getValueAt(selectedRow, 1);
        WorkRequest request = (WorkRequest) roadMaintainencejTable.getValueAt(selectedRow, 6);
        status = roadMaintainencejTable.getValueAt(selectedRow, 7).toString();
        if (status.equalsIgnoreCase("Processed")) {
            JOptionPane.showMessageDialog(this, "It is already processed", "Warning", JOptionPane.WARNING_MESSAGE);

        }
        else {
        ProcessRoadRequestJPanel processRoadRequestJPanel = new ProcessRoadRequestJPanel(userProcessContainer, road, ua, e, request);
        userProcessContainer.add("processRoadRequestJPanel", processRoadRequestJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_requestRoadSupplierjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton requestRoadSupplierjButton;
    private javax.swing.JButton requestWorkerjButton;
    private javax.swing.JTable roadMaintainencejTable;
    // End of variables declaration//GEN-END:variables
}
