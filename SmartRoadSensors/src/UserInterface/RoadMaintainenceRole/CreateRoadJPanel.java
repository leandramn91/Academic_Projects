/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.RoadMaintainenceRole;

import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import static Business.Organization.Organization.Type.RoadSupplier;
import static Business.Organization.Organization.Type.SensorSupplier;
import Business.Road.Road;
import static Business.Role.Role.RoleType.RoadSupplier;
import static Business.Role.Role.RoleType.SensorSupplier;
import Business.Supplier.Products.Product;
import Business.Supplier.RoadSupplier;
import Business.Supplier.SensorSupplier;
import Business.Supplier.Supplier;
import static Business.Supplier.Supplier.Type.SensorSupplier;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Leandra
 */
public class CreateRoadJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Organization o;
    private Enterprise e;
    private UserAccount ua;
    /**
     * Creates new form CreatRoadJPanel
     */
    public CreateRoadJPanel(JPanel userProcessContainer, Organization o, Enterprise e, UserAccount ua) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.o = o;
        this.e = e;
        this.ua = ua;
        populateRoadSupplierCombo();
        populateSensorSupplierCombo();
        populateSensorSupplierList();
    }
    
     private void populateRoadSupplierCombo(){
        roadSupplierjComboBox.removeAllItems();
        for (Supplier supplier : e.getSupplierDirectory().getSupplierlist()){
            if (supplier instanceof RoadSupplier){
                roadSupplierjComboBox.addItem(supplier);
            }        
        }
    }
     
     private void populateSensorSupplierCombo(){
        sensorSupplierjComboBox.removeAllItems();
        for (Supplier supplier : e.getSupplierDirectory().getSupplierlist()){
            if (supplier instanceof SensorSupplier){
                sensorSupplierjComboBox.addItem(supplier);
            }        
        }
    }
     
     private void populateSensorSupplierList(){
         sensorjList.removeAll();
         Supplier supplier = (Supplier) sensorSupplierjComboBox.getSelectedItem();
         DefaultListModel dlm = new DefaultListModel();
         for (Product p : supplier.getProductCatalog().getProductcatalog())
             dlm.addElement(p);
         sensorjList.setModel(dlm);
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CreateRoadjLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        sensorjList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        roadNamejTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        roadLocationjTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        lengthjTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        noOfSensorsjTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        backjButton = new javax.swing.JButton();
        createRoadjButton = new javax.swing.JButton();
        roadSupplierjComboBox = new javax.swing.JComboBox();
        sensorSupplierjComboBox = new javax.swing.JComboBox();
        noOfSensorsjLabel = new javax.swing.JLabel();
        roadNamejLabel = new javax.swing.JLabel();
        roadLocationjLabel = new javax.swing.JLabel();
        roadLengthjLabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setLayout(null);

        CreateRoadjLabel.setFont(new java.awt.Font("Segoe Print", 1, 36)); // NOI18N
        CreateRoadjLabel.setText("Create Road");
        add(CreateRoadjLabel);
        CreateRoadjLabel.setBounds(220, 40, 224, 65);

        sensorjList.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        jScrollPane1.setViewportView(sensorjList);

        add(jScrollPane1);
        jScrollPane1.setBounds(430, 520, 170, 91);

        jLabel1.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        jLabel1.setText("Location");
        add(jLabel1);
        jLabel1.setBounds(80, 220, 60, 26);

        jLabel2.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        jLabel2.setText("Road Name");
        add(jLabel2);
        jLabel2.setBounds(80, 170, 81, 26);

        roadNamejTextField.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        add(roadNamejTextField);
        roadNamejTextField.setBounds(430, 160, 170, 32);

        jLabel3.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        jLabel3.setText("Length");
        add(jLabel3);
        jLabel3.setBounds(80, 270, 49, 26);

        roadLocationjTextField.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        add(roadLocationjTextField);
        roadLocationjTextField.setBounds(430, 210, 170, 32);

        jLabel4.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        jLabel4.setText("Number of sensors");
        add(jLabel4);
        jLabel4.setBounds(80, 340, 130, 26);

        lengthjTextField.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        lengthjTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lengthjTextFieldActionPerformed(evt);
            }
        });
        add(lengthjTextField);
        lengthjTextField.setBounds(430, 270, 170, 32);

        jLabel5.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        jLabel5.setText("Road Supplier");
        add(jLabel5);
        jLabel5.setBounds(80, 400, 99, 26);

        noOfSensorsjTextField.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        add(noOfSensorsjTextField);
        noOfSensorsjTextField.setBounds(430, 330, 170, 32);

        jLabel6.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        jLabel6.setText("Sensors Supplier");
        add(jLabel6);
        jLabel6.setBounds(80, 460, 116, 26);

        jLabel7.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        jLabel7.setText("Select Sensor");
        add(jLabel7);
        jLabel7.setBounds(80, 520, 93, 26);

        backjButton.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        backjButton.setText("Back");
        backjButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        backjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButtonActionPerformed(evt);
            }
        });
        add(backjButton);
        backjButton.setBounds(80, 650, 85, 56);

        createRoadjButton.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        createRoadjButton.setText("Create Road");
        createRoadjButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        createRoadjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createRoadjButtonActionPerformed(evt);
            }
        });
        add(createRoadjButton);
        createRoadjButton.setBounds(510, 650, 93, 56);

        roadSupplierjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        roadSupplierjComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roadSupplierjComboBoxActionPerformed(evt);
            }
        });
        add(roadSupplierjComboBox);
        roadSupplierjComboBox.setBounds(430, 400, 165, 22);

        sensorSupplierjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        sensorSupplierjComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sensorSupplierjComboBoxActionPerformed(evt);
            }
        });
        add(sensorSupplierjComboBox);
        sensorSupplierjComboBox.setBounds(430, 460, 165, 22);
        add(noOfSensorsjLabel);
        noOfSensorsjLabel.setBounds(660, 330, 240, 30);
        add(roadNamejLabel);
        roadNamejLabel.setBounds(650, 160, 210, 30);
        add(roadLocationjLabel);
        roadLocationjLabel.setBounds(660, 210, 220, 30);
        add(roadLengthjLabel);
        roadLengthjLabel.setBounds(660, 270, 160, 30);

        jLabel8.setIcon(new javax.swing.ImageIcon("C:\\Users\\Leandra\\Documents\\GitHub\\menezes_leandra_001621189\\menezes_leandra_001621189\\Project\\SmartRoadSensors\\images\\road-1.png")); // NOI18N
        add(jLabel8);
        jLabel8.setBounds(910, 20, 300, 200);
    }// </editor-fold>//GEN-END:initComponents

    private void roadSupplierjComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roadSupplierjComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roadSupplierjComboBoxActionPerformed

    private void createRoadjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createRoadjButtonActionPerformed
        // TODO add your handling code here:
        try
        {
        
            int selectedList = sensorjList.getSelectedIndex();
            if (selectedList < 0) {
            JOptionPane.showMessageDialog(this, "Select a sensor", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        boolean roadNameTrue = validateName();
        boolean roadLocationTrue = validateLocation();
        boolean lengthTrue = validateRoadLength();
        boolean noOfSensorsTrue = validateNoOfSensors();
        
            if (roadNameTrue && roadLocationTrue && lengthTrue && noOfSensorsTrue) {
                Road road = e.getRoadDirectory().createRoad();
                road.setRoadName(roadNamejTextField.getText());
                road.setRoadLocation(roadLocationjTextField.getText());
                road.setNoOfSensors(Integer.parseInt(noOfSensorsjTextField.getText()));
                road.setRoadSupplier((Supplier) roadSupplierjComboBox.getSelectedItem());
                road.setSensorSupplier((Supplier) sensorSupplierjComboBox.getSelectedItem());
                road.setSensorType((Product) sensorjList.getSelectedValue());
                road.setRoadMaintainer(ua);
                JOptionPane.showMessageDialog(null, "Road added successfully!!", "Info", JOptionPane.INFORMATION_MESSAGE);
                roadNamejTextField.setText("");
                roadLocationjTextField.setText("");
                noOfSensorsjTextField.setText("");
                lengthjTextField.setText("");
            } else {
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, " Please specify proper road information", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_createRoadjButtonActionPerformed

    public boolean validateName() {
        if (roadNamejTextField.getText().trim().equals("")) {
            roadNamejLabel.setText("Please enter the road name");
            return false;
        } else if (!roadNamejTextField.getText().matches("^[a-zA-Z ]*$")) {
            roadNamejLabel.setText("only characters");
            return false;
        } else {
            roadNamejLabel.setText("");
            return true;
        }
    }
    
     public boolean validateLocation() {
        if (roadLocationjTextField.getText().trim().equals("")) {
            roadLocationjLabel.setText("Please enter the road location");
            return false;
        } else if (!roadLocationjTextField.getText().matches("^[a-zA-Z ]*$")) {
            roadLocationjLabel.setText("only characters");
            return false;
        } else {
            roadLocationjLabel.setText("");
            return true;
        }
    }
    
    
    public boolean validateRoadLength() {
        if (lengthjTextField.getText().trim().equals("")) {
            roadLengthjLabel.setText("Please enter road length");
            return false;
        } else if (!lengthjTextField.getText().matches("^[0-9]*$")) {
            roadLengthjLabel.setText("only numbers");
            return false;
        } else {
            roadLengthjLabel.setText("");
            return true;
        }
    }
    
    public boolean validateNoOfSensors() {
        if (noOfSensorsjTextField.getText().trim().equals("")) {
            noOfSensorsjLabel.setText("Please enter no of sensors");
            return false;
        } else if (!noOfSensorsjTextField.getText().matches("^[0-9]*$")) {
            noOfSensorsjLabel.setText("only numbers");
            return false;
        } else {
            noOfSensorsjLabel.setText("");
            return true;
        }
    }
    
    
    private void backjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        
    }//GEN-LAST:event_backjButtonActionPerformed

    private void sensorSupplierjComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sensorSupplierjComboBoxActionPerformed
        // TODO add your handling code here:
        Supplier supplier = (Supplier) sensorSupplierjComboBox.getSelectedItem();
        if (supplier != null)
            populateSensorSupplierList();
    }//GEN-LAST:event_sensorSupplierjComboBoxActionPerformed

    private void lengthjTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lengthjTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lengthjTextFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CreateRoadjLabel;
    private javax.swing.JButton backjButton;
    private javax.swing.JButton createRoadjButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lengthjTextField;
    private javax.swing.JLabel noOfSensorsjLabel;
    private javax.swing.JTextField noOfSensorsjTextField;
    private javax.swing.JLabel roadLengthjLabel;
    private javax.swing.JLabel roadLocationjLabel;
    private javax.swing.JTextField roadLocationjTextField;
    private javax.swing.JLabel roadNamejLabel;
    private javax.swing.JTextField roadNamejTextField;
    private javax.swing.JComboBox roadSupplierjComboBox;
    private javax.swing.JComboBox sensorSupplierjComboBox;
    private javax.swing.JList sensorjList;
    // End of variables declaration//GEN-END:variables
}
